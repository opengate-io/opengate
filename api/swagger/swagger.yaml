swagger: "2.0"
info:
  version: "0.0.1"
  title: service-advisor
# during dev, should point to your local machine
host: localhost:8000
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /services:
    # binds a127 app logic to a route
    x-swagger-router-controller: services
    get:
      description: Returns 'Service' list that is capable to call from client according to OpenAPI 3.0 or Swagger 2.0.
      # used as the method name of the controller
      operationId: getServices
      parameters:
        - name: name
          in: query
          description: The name of the service specs to look up.
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServicesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Create 'Service' specs into the system.
      # used as the method name of the controller
      operationId: createService
      parameters:
        - name: body
          in: body
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServiceRequest"
      responses:
        "201":
          description: Created
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServiceResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/service/{id}":
    # binds a127 app logic to a route
    x-swagger-router-controller: services
    get:
      description: Returns 'Service' specs from the system.
      # used as the method name of the controller
      operationId: getServiceById
      parameters:
        - name: id
          in: path
          description: The id of the service to be affected.
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServicesResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    put:
      description: Update 'Service' specs into the system.
      # used as the method name of the controller
      operationId: updateService
      parameters:
        - name: id
          in: path
          description: The id of the service to be affected.
          required: true
          type: integer
        - name: body
          in: body
          description: The full specs of the service to update.
          required: true
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServiceRequest"
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Remove 'Service' specs out of the system.
      # used as the method name of the controller
      operationId: deleteService
      parameters:
        - name: id
          in: path
          description: The id of the service to be affected.
          required: true
          type: integer
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/ServiceResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/service/{id}/start":
    put:
      description: Start training 'Service' specs in the system.
      # used as the method name of the controller
      operationId: startTrainingService
      parameters:
        - name: id
          in: path
          description: The id of the service to be affected.
          required: true
          type: integer
      responses:
        "201":
          description: Created
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/service/{id}/stop":
    put:
      description: Stop training 'Service' specs in the system.
      # used as the method name of the controller
      operationId: stopTrainingService
      parameters:
        - name: id
          in: path
          description: The id of the service to be affected.
          required: true
          type: integer
      responses:
        "201":
          description: Created
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  "/catalogs":
    get:
      description: Get 'Service' specs calalogs in the system.
      # used as the method name of the controller
      operationId: getServiceCatalogs
      responses:
        "200":
          description: Success
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/CatalogsResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  ServiceRequest:
    required:
      - name
    properties:
      name:
        type: string
      method:
        type: string
      tags:
        type: array
        items: 
          type: string
  ServiceResponse:
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
      version:
        type: string
      specs:
        type: string
      probability:
        type: number
        format: float32
  ServicesResponse:
    required:
      - items
    properties:
      total:
        type: integer
      start:
        type: integer
      size:
        type: integer
      items:
        type: array
        items:
          $ref : "#/definitions/ServiceResponse"
  CatalogResponse:
    required:
      - id
    properties:
      id:
        type: string
      name:
        type: string
      version:
        type: string
  CatalogsResponse:
    required:
      - items
    properties:
      total:
        type: integer
      start:
        type: integer
      size:
        type: integer
      items:
        type: array
        items:
          $ref : "#/definitions/CatalogResponse"
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
